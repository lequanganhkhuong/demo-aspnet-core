@model ReflectionIT.Mvc.Paging.PagingList<DemoProject2.Models.Employee>
@using ReflectionIT.Mvc.Paging

@{
    ViewData["Title"] = "Index";
}

<h1>Index</h1>

<p>
    <a asp-action="Create">Create New</a>
</p>
<form asp-action="Index" method="get">
    <div class="form-actions no-color">
        <p>
            Find by name: <input type="text" name="search" value="@ViewBag.search" />
            <input type="submit" value="Search" class="btn btn-default" /> |
            <a asp-action="Index">Back to Full List</a>
        </p>
    </div>
</form>
<p>Click on Name or Role column to sort</p>
<table class="table Highlight striped responsive-table">
    <thead>
        <tr>
            <th>
               <a asp-action="Index" asp-route-search="@ViewBag.search" asp-route-sortOrder="@ViewBag.Name">@Html.DisplayNameFor(model => model.Nane)</a>
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Username)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Password)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Avatar)
            </th>
            <th>
                <a asp-action="Index"  asp-route-search="@ViewBag.search" asp-route-sortOrder="@ViewBag.Role">@Html.DisplayNameFor(model => model.Role)</a>
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Nane)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Username)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Password)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Avatar)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Role)
            </td>
            <td>
                <a asp-action="Edit" asp-route-id="@item.Id">Edit</a> |
                <a asp-action="Details" asp-route-id="@item.Id">Details</a> |
                <a asp-action="Delete" asp-route-id="@item.Id">Delete</a>
            </td>
        </tr>
}
    </tbody>
</table>
<div aria-label="Suppliers navigation example">
    @await this.Component.InvokeAsync($"Pager", new {pagingList = this.Model})
</div>